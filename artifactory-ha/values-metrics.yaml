artifactory:
  openMetrics:
    enabled: true
  systemYaml: |
    shared:
      metrics:
        enabled: true
        filebeat:
          enabled: true
          elasticsearch:
            url: http://mission-control.<MISSION_CONTROL_NAMESPACE>.svc.cluster.local:8082/elasticsearch
            username: admin
            password: admin
      logging:
        consoleLog:
          enabled: {{ .Values.artifactory.consoleLog }}
      extraJavaOpts: >
        -Dartifactory.access.client.max.connections={{ .Values.access.tomcat.connector.maxThreads }}
      {{- with .Values.artifactory.primary.javaOpts }}
        -Dartifactory.async.corePoolSize={{ .corePoolSize }}
      {{- if .xms }}
        -Xms{{ .xms }}
      {{- end }}
      {{- if .xmx }}
        -Xmx{{ .xmx }}
      {{- end }}
      {{- if .jmx.enabled }}
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.port={{ .jmx.port }}
        -Dcom.sun.management.jmxremote.rmi.port={{ .jmx.port }}
        -Dcom.sun.management.jmxremote.ssl={{ .jmx.ssl }}
      {{- if .jmx.host }}
        -Djava.rmi.server.hostname={{ tpl .jmx.host $ }}
      {{- else }}
        -Djava.rmi.server.hostname={{ template "artifactory-ha.fullname" $ }}
      {{- end }}
      {{- if .jmx.authenticate }}
        -Dcom.sun.management.jmxremote.authenticate=true
        -Dcom.sun.management.jmxremote.access.file={{ .jmx.accessFile }}
        -Dcom.sun.management.jmxremote.password.file={{ .jmx.passwordFile }}
      {{- else }}
        -Dcom.sun.management.jmxremote.authenticate=false
      {{- end }}
      {{- end }}
      {{- if .other }}
        {{ .other }}
      {{- end }}
      {{- end }}
      database:
      {{- if .Values.postgresql.enabled }}
        type: postgresql
        url: "jdbc:postgresql://{{ .Release.Name }}-postgresql:{{ .Values.postgresql.service.port }}/{{ .Values.postgresql.postgresqlDatabase }}"
        host: ""
        driver: org.postgresql.Driver
        username: "{{ .Values.postgresql.postgresqlUsername }}"
      {{ else }}
        type: "{{ .Values.database.type }}"
        driver: "{{ .Values.database.driver }}"
      {{- end }}
    artifactory:
    {{- if .Values.artifactory.openMetrics }}
      metrics:
        enabled: {{ .Values.artifactory.openMetrics.enabled }}
    {{- end }}
    {{- if or .Values.artifactory.haDataDir.enabled .Values.artifactory.haBackupDir.enabled }}
      node:
      {{- if .Values.artifactory.haDataDir.path }}
        haDataDir: {{ .Values.artifactory.haDataDir.path }}
      {{- end }}
      {{- if .Values.artifactory.haBackupDir.path }}
        haBackupDir: {{ .Values.artifactory.haBackupDir.path }}
      {{- end }}
    {{- end }}
      database:
        maxOpenConnections: {{ .Values.artifactory.database.maxOpenConnections }}
      tomcat:
        connector:
          maxThreads: {{ .Values.artifactory.tomcat.connector.maxThreads }}
          extraConfig: {{ .Values.artifactory.tomcat.connector.extraConfig }}
    frontend:
      session:
        timeMinutes: {{ .Values.frontend.session.timeoutMinutes | quote }}
    access:
      database:
        maxOpenConnections: {{ .Values.access.database.maxOpenConnections }}
      tomcat:
        connector:
          maxThreads: {{ .Values.access.tomcat.connector.maxThreads }}
          extraConfig: {{ .Values.access.tomcat.connector.extraConfig }}
      {{- if .Values.access.database.enabled }}
        type: "{{ .Values.access.database.type }}"
        url: "{{ .Values.access.database.url }}"
        driver: "{{ .Values.access.database.driver }}"
        username: "{{ .Values.access.database.user }}"
        password: "{{ .Values.access.database.password }}"
      {{- end }}
    metadata:
      database:
        maxOpenConnections: {{ .Values.metadata.database.maxOpenConnections }}
    {{- if .Values.artifactory.replicator.enabled }}
    replicator:
      enabled: true
    {{- end }}
